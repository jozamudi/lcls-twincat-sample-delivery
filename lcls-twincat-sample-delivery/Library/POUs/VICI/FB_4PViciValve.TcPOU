<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_4PViciValve" Id="{6fb89063-7f94-4131-981c-d943e8a8216a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_4PViciValve
VAR_INPUT
	iAddress : INT;
END_VAR
VAR_OUTPUT
END_VAR
VAR

	// Re-Use Vici Driver Code for 12 port Value
	fbViciDriver  : FB_ViciDriver;
	fbViciSerial  : FB_SerialCommWrapper;
	stViciSerial  : ST_SerialComm;
	stViciVlvCtrl : ST_ViciControl;
	stViciVlvStatus : ST_ViciStatus;
	//
	iNewPos: INT;
	iMaped : INT;
	

	{attribute 'pytmc' := '
        pv: ReqPos
        io: io
    '}
	iVici1ReqPos : INT;

	{attribute 'pytmc' := '
        pv: SampleNames
        io: io
     '}
	 stSampleName : ST_4PViciValveSampleNames;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Re-using 12 Port Code, Need to map 1-4 to vlaues that 12 port Commands
//map 1-4 to 9 - 12;

iNewPos := LIMIT(1, iVici1ReqPos, 4);
iMaped := 12 + ((iNewPos - 1)*(9 - 12) / (4 - 1));

stViciVlvCtrl.iReqPos := iMaped;
stViciVlvCtrl.iAddress := iAddress;

fbViciDriver(
    i_xExecute:= TRUE,
    i_tTimeOut:= t#10s,
    i_stControl:= stViciVlvCtrl,
    iq_stSerialRXBuffer:= stViciSerial.RxBuffer,
    iq_stSerialTXBuffer:= stViciSerial.TxBuffer,
    q_stStatus=> stViciVlvStatus);

IF 	fbViciDriver.q_xDone OR
    fbViciDriver.q_xError OR
    fbViciDriver.q_xTimeout THEN
    (* reset function for next time *)
    fbViciDriver(i_xExecute:=FALSE,
        iq_stSerialRXBuffer:= stViciSerial.RxBuffer,
        iq_stSerialTXBuffer:= stViciSerial.TxBuffer);

END_IF

fbViciSerial(stSerialComm := stViciSerial);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>