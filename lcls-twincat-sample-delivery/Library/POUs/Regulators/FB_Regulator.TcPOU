<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="FB_Regulator" Id="{aa85a243-cf4d-4b77-a154-ab7f2bb33020}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Regulator
VAR_INPUT
    iI: INT;
    lrVelocity	:	LREAL := 360;
END_VAR
VAR_OUTPUT
q_asResult: ARRAY [1..20] OF STRING;
q_xError	:	BOOL;
END_VAR
VAR_IN_OUT
    iq_stRegulator	:	ST_Regulator;
END_VAR
VAR


mcPower	:	MC_Power;
mcSetHome	:	MC_SetPosition;
mcReset	:	MC_Reset;
mcMoveAbsolute : ARRAY[1..2] OF MC_MoveAbsolute;
mcStatus : MC_ReadStatus;

mcHalt	:	MC_Halt;

    iPressDiff: INT;
    iTolerance: INT := 50;
    xMoveOK: BOOL;
    iStep: INT;

    indexResult: INT := 1;

    xInitComplete	:	BOOL := FALSE;

    ftBackToAuto	:	F_TRIG;
    iPercSPOld: UINT;
    imcBlockIndex: INT;
    imcBlockIndexPrev : INT;

    rtEnable : R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Regulator Function Block *)
(* Alex Wallace, 2014-10-16 *)
(* Modified in 2.5.3 to remove all pressure SP  based code *)

rtEnable(CLK:=iq_stRegulator.xRegEnab);

(* Regulator Pressure Calculation *)
iq_stRegulator.wInPress := LIMIT(0, F_rPressure(iRawVoltage := iq_stRegulator.i_iRawInPress), 10000);
iq_stRegulator.wOutPress := LIMIT(0, F_rPressure(iRawVoltage := iq_stRegulator.i_iRawOutPress), 10000);


(* Basic regulator interlocking *)


(* Check for regulator enable *)
xMoveOK := iq_stRegulator.xRegEnab;
IF NOT xMoveOK THEN
    (*iq_stRegulator.wPressSP := 0; not preferred *)
    iq_stRegulator.xRegEnab := FALSE;
    (* add motor error here *)
END_IF

IF q_xError THEN
    iStep := 9000;
ELSIF rtEnable.Q THEN
    xInitComplete := FALSE;
    iStep := 10;
ELSIF xInitComplete THEN
    iStep := 3000;
END_IF


CASE iStep OF
    0: iStep := 10;
    10:
    (* Start by initializing the motor axis *)
    mcPower.Enable := TRUE;
    iq_stRegulator.lrUpperLimPos := 2887;
    IF mcPower.Status THEN
        xInitComplete := TRUE;
        q_asResult[indexResult] := 'Motor init success';
        indexResult := indexResult + 1;
        iStep := 3000;
    ELSIF mcPower.Error THEN
        mcPower.Enable := FALSE;
        iStep := 9000;
        q_xError	:=	TRUE;
        q_asResult[indexResult] := CONCAT('Initilizing regulator motor in step 10 failed with error code: ', UDINT_TO_STRING(mcPower.ErrorID));
        indexResult := indexResult +1;
    END_IF

    //Knob controls
    3000:

    IF iq_stRegulator.i_iPercSP <> iPercSPOld  AND xMoveOK THEN
        mcMoveAbsolute[imcBlockIndex].Execute := FALSE;
        imcBlockIndex := imcBlockIndex + 1;
        IF imcBlockIndex >2 THEN imcBlockIndex := 1; END_IF
        mcMoveAbsolute[imcBlockIndex].Position := LIMIT(0, UINT_TO_LREAL(iq_stRegulator.i_iPercSP) * iq_stRegulator.lrUpperLimPos/65535, MAX(iq_stRegulator.lrUpperLimPos,1));
        mcMoveAbsolute[imcBlockIndex].Execute := TRUE;
        iPercSPOld := iq_stRegulator.i_iPercSP;
    ELSIF mcMoveAbsolute[imcBlockIndex].Done or mcMoveAbsolute[imcBlockIndex].CommandAborted or mcMoveAbsolute[imcBlockIndex].Busy or mcMoveAbsolute[imcBlockIndex].Error THEN
        mcMoveAbsolute[imcBlockIndex].Execute := FALSE;
    END_IF

    9000:
    (* Error *)
    mcReset.Execute := iq_stRegulator.xRegEnab;
    IF mcReset.Done THEN
        q_xError := FALSE;
        mcReset.Execute := FALSE;
        iStep:=10;
    END_IF

END_CASE

//Reset the debugging index
IF indexResult > 20 THEN indexResult := 1; END_IF

(* Regulator Percentage Open *)
(* Calculate the regulator percentage open, based on 6.5 turns to fully open *)

iq_stRegulator.wPercentageOpen := LREAL_TO_WORD( (iq_stRegulator.stRegulatorMotor.NcToPlc.ActPos / MAX(iq_stRegulator.lrUpperLimPos,1))*100);

(* Run the mc blocks *)
iq_stRegulator.stRegulatorMotor();
ActPower();

mcSetHome(Execute:=NOT(iq_stRegulator.xRegLoLS) AND iq_stRegulator.stRegulatorMotor.Status.StandStill, Axis:=iq_stRegulator.stRegulatorMotor, Position:=0, Mode:=FALSE);
IF NOT iq_stRegulator.xRegHiLS THEN iq_stRegulator.lrUpperLimPos := iq_stRegulator.stRegulatorMotor.NcToPlc.ActPos; END_IF
mcReset(Axis:=iq_stRegulator.stRegulatorMotor);

FOR iI := 1 TO 2 DO
mcMoveAbsolute[iI](Axis := iq_stRegulator.stRegulatorMotor, Velocity:=iq_stRegulator.lrVelocity, BufferMode:=MC_Aborting);
END_FOR

IF mcMoveAbsolute[1].Error OR mcMoveAbsolute[2].Error THEN
    q_xError	:=	TRUE;
    mcMoveAbsolute[1].Execute := FALSE;
    mcMoveAbsolute[2].Execute := FALSE;
    q_asResult[indexResult] := 'Error occured with motion blocks';
    indexResult := indexResult +1;
ELSIF mcPower.Error THEN
    q_xError := TRUE;
    q_asResult[indexResult] := concat('mcPower block error: ', UDINT_TO_STRING(mcPower.ErrorID));
END_IF]]></ST>
    </Implementation>
    <Action Name="ActPower" Id="{e34cb278-3582-4d00-9245-81999faf4464}">
      <Implementation>
        <NWL>
          <XmlArchive>
            <Data>
              <o xml:space="preserve" t="NWLImplementationObject">
                <v n="NetworkListComment">""</v>
                <v n="DefaultViewMode">"Fbd"</v>
                <l2 n="NetworkList" cet="Network">
                  <o>
                    <v n="Comment">""</v>
                    <v n="Title">""</v>
                    <v n="Label">""</v>
                    <v n="OutCommented">false</v>
                    <l2 n="NetworkItems" cet="BoxTreeBox">
                      <o>
                        <v n="BoxType">"MC_Power"</v>
                        <o n="Instance" t="Operand">
                          <v n="Operand">"mcPower"</v>
                          <v n="Type">"MC_Power"</v>
                          <v n="Comment">""</v>
                          <v n="SymbolComment">""</v>
                          <v n="Address">""</v>
                          <o n="Flags" t="Flags">
                            <v n="Flags">0</v>
                            <v n="Fixed">false</v>
                          </o>
                          <v n="LValue">false</v>
                          <v n="Boolean">false</v>
                          <v n="IsInstance">true</v>
                          <v n="Id">2L</v>
                        </o>
                        <o n="OutputItems" t="OutputItemList">
                          <l2 n="OutputItems" cet="Operand">
                            <n />
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">4L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">5L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">6L</v>
                            </o>
                            <o>
                              <v n="Operand">""</v>
                              <v n="Type">"UDINT"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">7L</v>
                            </o>
                          </l2>
                        </o>
                        <o n="Flags" t="Flags">
                          <v n="Flags">0</v>
                          <v n="Fixed">false</v>
                        </o>
                        <n n="InputFlags" />
                        <l2 n="InputItems" cet="BoxTreeOperand">
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"iq_stRegulator.stRegulatorMotor"</v>
                              <v n="Type">"AXIS_REF"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">" Regulator motor "</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">9L</v>
                            </o>
                            <v n="Id">8L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">""</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">11L</v>
                            </o>
                            <v n="Id">10L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"iq_stRegulator.xRegHiLS"</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">"%I*"</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">13L</v>
                            </o>
                            <v n="Id">12L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"iq_stRegulator.xRegLoLS"</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">"%I*"</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">15L</v>
                            </o>
                            <v n="Id">14L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">""</v>
                              <v n="Type">"LREAL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">17L</v>
                            </o>
                            <v n="Id">16L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">"MC_Aborting"</v>
                              <v n="Type">"UINT"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">19L</v>
                            </o>
                            <v n="Id">18L</v>
                          </o>
                          <o>
                            <o n="Operand" t="Operand">
                              <v n="Operand">""</v>
                              <v n="Type">"ST_PowerOptions"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">21L</v>
                            </o>
                            <v n="Id">20L</v>
                          </o>
                        </l2>
                        <o n="InputParam" t="ParamList">
                          <l2 n="Names" cet="String">
                            <v>Axis</v>
                            <v>Enable</v>
                            <v>Enable_Positive</v>
                            <v>Enable_Negative</v>
                            <v>Override</v>
                            <v>BufferMode</v>
                            <v>Options</v>
                          </l2>
                          <l2 n="Types" cet="String">
                            <v>AXIS_REF[REF]</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>LREAL</v>
                            <v>MC_BufferMode</v>
                            <v>ST_PowerOptions</v>
                          </l2>
                        </o>
                        <o n="OutputParam" t="ParamList">
                          <l2 n="Names" cet="String">
                            <v>Status</v>
                            <v>Busy</v>
                            <v>Active</v>
                            <v>Error</v>
                            <v>ErrorID</v>
                          </l2>
                          <l2 n="Types" cet="String">
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>BOOL</v>
                            <v>UDINT</v>
                          </l2>
                        </o>
                        <v n="CallType" t="Operator">FunctionBlock</v>
                        <v n="EN">false</v>
                        <v n="ENO">false</v>
                        <n n="STSnippet" />
                        <v n="Id">3L</v>
                      </o>
                    </l2>
                    <v n="ILActive">false</v>
                    <v n="FBDValid">false</v>
                    <v n="ILValid">false</v>
                    <l2 n="ILLines" />
                    <l2 n="Connectors" />
                    <v n="Id">1L</v>
                  </o>
                </l2>
                <v n="BranchCounter">0</v>
                <v n="ValidIds">true</v>
              </o>
            </Data>
            <TypeList>
              <Type n="Boolean">System.Boolean</Type>
              <Type n="BoxTreeBox">{acfc6f68-8e3a-4af5-bf81-3dd512095a46}</Type>
              <Type n="BoxTreeOperand">{9de7f100-1b87-424c-a62e-45b0cfc85ed2}</Type>
              <Type n="Flags">{668066f2-6069-46b3-8962-8db8d13d7db2}</Type>
              <Type n="Int32">System.Int32</Type>
              <Type n="Int64">System.Int64</Type>
              <Type n="Network">{d9a99d73-b633-47db-b876-a752acb25871}</Type>
              <Type n="NWLImplementationObject">{25e509de-33d4-4447-93f8-c9e4ea381c8b}</Type>
              <Type n="Operand">{c9b2f165-48a2-4a45-8326-3952d8a3d708}</Type>
              <Type n="Operator">{bffb3c53-f105-4e85-aba2-e30df579d75f}</Type>
              <Type n="OutputItemList">{f40d3e09-c02c-4522-a88c-dac23558cfc4}</Type>
              <Type n="ParamList">{71496971-9e0c-4677-a832-b9583b571130}</Type>
              <Type n="String">System.String</Type>
            </TypeList>
          </XmlArchive>
        </NWL>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>